on:
  # Run whenever new commits are pushed to the target branches defined as gibelow.
  push:
    branches:
      - 'bugfix_*' # bugfix branches
      - 'feat_*' # feature branches
      - 'staging_*' # staging branches
  # Run whenever a pull request event occurs and the target branches defined as below.
  pull_request:
    branches:
      - 'main' # main branch
      - 'staging_*' # staging branches

name: Check all requirements for accepting changes to a branch

jobs:
  check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Check - install
        run: yarn install
      - name: Check - audit (production)
        run: yarn audit
        # lint-check currently incompatible with yarn 2. use yarn classic only
      - name: Check - format
        run: yarn run lint-check
      - name: Check - build
        run: yarn run build
      - name: Run tests
        run: yarn test
